{"version":3,"file":"static/js/310.94c23895.chunk.js","mappings":"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","sources":["components/film/film.style.jsx","components/film/Film.js","components/info/info.style.jsx","components/info/Info.jsx","pages/FilmDetailsPage/FilmDetailsPage.jsx","pages/MoviePage/MoviePage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  margin-bottom: 10px;\n  margin-left: 5px;\n  display: flex;\n  align-items: center;\n  &:active {\n    background-color: blue;\n  }\n`;\n\nexport const Container = styled.div`\n  padding: 15px;\n  box-shadow: 0px 1px 5px #908060;\n`;\n\nexport const BoxItem = styled.div`\n  display: flex;\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n`\n\nexport const Box = styled.div`\nwidth: 300px;\nmargin-left: 30px;\ndisplay: flex;\nflex-direction: column;\njustify-content: space-evenly;\n`","import { AiOutlineArrowLeft } from 'react-icons/ai';\nimport {\n  Button,\n  Container,\n  Img,\n  Box,\n  BoxItem,\n} from 'components/film/film.style.jsx';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Film = ({ trendingFilm, genresFilm }) => {\n  const { title, release_date, overview, poster_path, vote_average } =\n    trendingFilm;\n  const date = new Date(release_date);\n  const year = date.getFullYear();\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  const location = useLocation();\n\n  const backPage = location.state?.from ?? '/';\n\n  return (\n    <>\n      <Container>\n        <Link to={backPage}>\n          <Button type=\"button\" to=\"/\">\n            <AiOutlineArrowLeft /> Go back\n          </Button>\n          {/* <AiOutlineArrowLeft /> Go back */}\n        </Link>\n        <BoxItem>\n          <div>\n            <Img\n              src={\n                poster_path\n                  ? IMG_URL + poster_path\n                  : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n              }\n              alt={title}\n            />\n          </div>\n          <Box>\n            <h2>\n              {title} ({year})\n            </h2>\n            <p>User Score: {`${(vote_average * 10).toFixed(0)}`}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h4>Genres</h4>\n            <p>{genresFilm.map(({ name }) => name).join(' / ')}</p>\n          </Box>\n        </BoxItem>\n      </Container>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Conteiner = styled.div`\n  padding: 15px;\n  box-shadow: 0px 1px 5px #908060;\n`;\n\nexport const List = styled.ul`\n  margin-top: 10px;\n  padding-left: 20px;\n`;\nexport const Item = styled.li`\n  list-style: disc;\n  &:last-child {\n    margin-top: 5px;\n  }\n`;\n\nexport const LinkEl = styled(NavLink)`\n  color: blue;\n\n  &.active {\n    color: red;\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import { Conteiner, LinkEl, List, Item } from 'components/info/info.style';\nimport { Outlet } from 'react-router-dom';\n\nexport const Info = () => {\n  return (\n    <>\n      <Conteiner>\n        <p>Additional information</p>\n        <List>\n          <Item>\n            <LinkEl to={'cast'}>Cast</LinkEl>\n          </Item>\n          <Item>\n            <LinkEl to={'revievs'}>Revievs</LinkEl>\n          </Item>\n        </List>\n      </Conteiner>\n      <Outlet />\n    </>\n  );\n};\n","import { fetchDetails } from 'servise/api';\nimport { useState, useEffect } from 'react';\nimport { Film } from 'components/film/Film';\nimport { useParams } from 'react-router-dom';\nimport { Info } from 'components/info/Info';\n\nconst FilmDetailsPage = () => {\n  const { movieId } = useParams();\n\n  const [movie_id] = useState(movieId);\n  const [trendingFilm, setTrendingFilm] = useState([]);\n  const [genresFilm, setGenresFilm] = useState([]);\n\n  useEffect(() => {\n    fetchDetails(movie_id).then(e => {\n      setGenresFilm(e.genres);\n      setTrendingFilm(e);\n    });\n  }, [movie_id]);\n\n  return (\n    <>\n      <Film trendingFilm={trendingFilm} genresFilm={genresFilm} />\n      <Info />\n    </>\n  );\n};\n\nexport default FilmDetailsPage;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { fetchSearch } from 'servise/api';\nimport FilmDetailsPage from 'pages/FilmDetailsPage/FilmDetailsPage';\nimport { NavLink, useLocation, useSearchParams } from 'react-router-dom';\n\nconst MoviePage = () => {\n  const [resultFilm, setResultFilm] = useState([]);\n  const [search, setSearch] = useSearchParams();\n  const location = useLocation();\n  const query = search.get('query') ?? '';\n\n  const handleChange = e => {\n    const { value } = e.currentTarget;\n    setSearch(value !== '' ? { query: value } : {});\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (query === '') {\n      toast.warn('Please specify your query!');\n      return;\n    }\n  };\n\n  useEffect(() => {\n    if (query === '') return;\n    fetchSearch(query).then(setResultFilm);\n  }, [query]);\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          autoFocus={true}\n          placeholder=\"Search films\"\n          onChange={handleChange}\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n\n      {query.length > 0 && (\n        <ul>\n          {resultFilm.map(({ title, id }) => (\n            <li key={id}>\n              <NavLink\n                to={`${id}`}\n                element={<FilmDetailsPage />}\n                state={{ from: location }}\n              >\n                {title}\n              </NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n\nexport default MoviePage;\n"],"names":["Button","styled","Container","BoxItem","Img","Box","Film","trendingFilm","genresFilm","title","release_date","overview","poster_path","vote_average","year","Date","getFullYear","backPage","useLocation","state","from","to","type","src","alt","toFixed","map","name","join","Conteiner","List","Item","LinkEl","NavLink","Info","movieId","useParams","useState","movie_id","setTrendingFilm","setGenresFilm","useEffect","fetchDetails","then","e","genres","resultFilm","setResultFilm","useSearchParams","search","setSearch","location","query","get","fetchSearch","onSubmit","preventDefault","toast","autoFocus","placeholder","onChange","value","currentTarget","length","id","element"],"sourceRoot":""}