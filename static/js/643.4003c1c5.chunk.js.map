{"version":3,"file":"static/js/643.4003c1c5.chunk.js","mappings":"oQAEaA,EAASC,EAAAA,QAAAA,OAAH,+JAUNC,EAAYD,EAAAA,QAAAA,IAAH,8EAKTE,EAAUF,EAAAA,QAAAA,IAAH,0CAIPG,EAAMH,EAAAA,QAAAA,IAAH,yCAIHI,EAAMJ,EAAAA,QAAAA,IAAH,oI,6BCfHK,EAAO,SAAC,GAAkC,IAAD,IAA/BC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,WAC3BC,EACNF,EADME,MAAOC,EACbH,EADaG,aAAcC,EAC3BJ,EAD2BI,SAAUC,EACrCL,EADqCK,YAAaC,EAClDN,EADkDM,aAG9CC,EADO,IAAIC,KAAKL,GACJM,cAMZC,EAAQ,qBAFGC,EAAAA,EAAAA,MAESC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAEzC,OACE,+BACE,UAAClB,EAAD,YACE,SAAC,KAAD,CAAMmB,GAAIJ,EAAV,UACE,UAACjB,EAAD,CAAQsB,KAAK,SAASD,GAAG,IAAzB,WACE,SAAC,MAAD,IADF,iBAKF,UAAClB,EAAD,YACE,0BACE,SAACC,EAAD,CACEmB,IACEX,EAnBE,kCAoBYA,EADH,0DAIbY,IAAKf,OAGT,UAACJ,EAAD,YACE,0BACGI,EADH,KACYK,EADZ,QAGA,mDAAmC,GAAfD,GAAmBY,QAAQ,IAA/C,QACA,sCACA,uBAAId,KACJ,oCACA,uBAAIH,EAAWkB,KAAI,qBAAGC,IAAH,IAAoBC,KAAK,mBAMvD,ECrDYC,EAAY5B,EAAAA,QAAAA,IAAH,8EAKT6B,EAAO7B,EAAAA,QAAAA,GAAH,oEAIJ8B,EAAO9B,EAAAA,QAAAA,GAAH,0FAOJ+B,GAAS/B,EAAAA,EAAAA,SAAOgC,EAAAA,GAAPhC,CAAH,mIChBNiC,EAAO,WAClB,OACE,iCACE,UAACL,EAAD,YACE,mDACA,UAACC,EAAD,YACE,SAACC,EAAD,WACE,SAACC,EAAD,CAAQX,GAAI,OAAZ,qBAEF,SAACU,EAAD,WACE,SAACC,EAAD,CAAQX,GAAI,UAAZ,8BAIN,SAAC,KAAD,MAGL,E,oBC6BD,EAzCwB,WACtB,IAAQc,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAmBE,EAAAA,EAAAA,UAASF,GAArBG,GAAP,eACA,GAAwCD,EAAAA,EAAAA,UAAS,CAAC,GAAlD,eAAO9B,EAAP,KAAqBgC,EAArB,KACA,GAAoCF,EAAAA,EAAAA,UAAS,IAA7C,eAAO7B,EAAP,KAAmBgC,EAAnB,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,IAAaN,GAAUO,MAAK,SAAAC,GAC1BN,EAAcM,EAAEC,QAChBR,EAAgBO,EACjB,GAKF,CAJC,MAAOA,GACPP,EAAgB,KACjB,CAPD,QAQEG,GAAa,EACd,CACF,GAAE,CAACJ,KAGF,8BACGG,GACC,8BACGlC,EAAayC,UACZ,iCACE,SAAC1C,EAAD,CAAMC,aAAcA,EAAcC,WAAYA,KAC9C,SAAC0B,EAAD,QAGF,SAACe,EAAA,EAAD,OAIJ,SAAC,IAAD,0BAIP,C","sources":["components/film/film.style.jsx","components/film/Film.js","components/info/info.style.jsx","components/info/Info.jsx","pages/FilmDetailsPage/FilmDetailsPage.jsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Button = styled.button`\n  margin-bottom: 10px;\n  margin-left: 5px;\n  display: flex;\n  align-items: center;\n  &:active {\n    background-color: blue;\n  }\n`;\n\nexport const Container = styled.div`\n  padding: 15px;\n  box-shadow: 0px 1px 5px #908060;\n`;\n\nexport const BoxItem = styled.div`\n  display: flex;\n`;\n\nexport const Img = styled.img`\n  width: 200px;\n`\n\nexport const Box = styled.div`\nwidth: 300px;\nmargin-left: 30px;\ndisplay: flex;\nflex-direction: column;\njustify-content: space-evenly;\n`","import { AiOutlineArrowLeft } from 'react-icons/ai';\nimport {\n  Button,\n  Container,\n  Img,\n  Box,\n  BoxItem,\n} from 'components/film/film.style.jsx';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const Film = ({ trendingFilm, genresFilm }) => {\n  const { title, release_date, overview, poster_path, vote_average } =\n    trendingFilm;\n  const date = new Date(release_date);\n  const year = date.getFullYear();\n\n  const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n\n  const location = useLocation();\n\n  const backPage = location.state?.from ?? '/';\n\n  return (\n    <>\n      <Container>\n        <Link to={backPage}>\n          <Button type=\"button\" to=\"/\">\n            <AiOutlineArrowLeft /> Go back\n          </Button>\n          {/* <AiOutlineArrowLeft /> Go back */}\n        </Link>\n        <BoxItem>\n          <div>\n            <Img\n              src={\n                poster_path\n                  ? IMG_URL + poster_path\n                  : `https://bitsofco.de/content/images/2018/12/broken-1.png`\n              }\n              alt={title}\n            />\n          </div>\n          <Box>\n            <h2>\n              {title} ({year})\n            </h2>\n            <p>User Score: {`${(vote_average * 10).toFixed(0)}`}%</p>\n            <h3>Overview</h3>\n            <p>{overview}</p>\n            <h4>Genres</h4>\n            <p>{genresFilm.map(({ name }) => name).join(' / ')}</p>\n          </Box>\n        </BoxItem>\n      </Container>\n    </>\n  );\n};\n","import styled from 'styled-components';\nimport { NavLink } from 'react-router-dom';\n\nexport const Conteiner = styled.div`\n  padding: 15px;\n  box-shadow: 0px 1px 5px #908060;\n`;\n\nexport const List = styled.ul`\n  margin-top: 10px;\n  padding-left: 20px;\n`;\nexport const Item = styled.li`\n  list-style: disc;\n  &:last-child {\n    margin-top: 5px;\n  }\n`;\n\nexport const LinkEl = styled(NavLink)`\n  color: blue;\n\n  &.active {\n    color: red;\n  }\n\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n","import { Conteiner, LinkEl, List, Item } from 'components/info/info.style';\nimport { Outlet } from 'react-router-dom';\n\nexport const Info = () => {\n  return (\n    <>\n      <Conteiner>\n        <p>Additional information</p>\n        <List>\n          <Item>\n            <LinkEl to={'cast'}>Cast</LinkEl>\n          </Item>\n          <Item>\n            <LinkEl to={'revievs'}>Revievs</LinkEl>\n          </Item>\n        </List>\n      </Conteiner>\n      <Outlet />\n    </>\n  );\n};\n","import { fetchDetails } from 'servise/api';\nimport { useState, useEffect } from 'react';\nimport { Film } from 'components/film/Film';\nimport { useParams } from 'react-router-dom';\nimport { Info } from 'components/info/Info';\nimport { Loading } from 'components/loading.style';\nimport { NotFound } from 'components/NotFound/NotFound';\n\nconst FilmDetailsPage = () => {\n  const { movieId } = useParams();\n\n  const [movie_id] = useState(movieId);\n  const [trendingFilm, setTrendingFilm] = useState({});\n  const [genresFilm, setGenresFilm] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    try {\n      fetchDetails(movie_id).then(e => {\n        setGenresFilm(e.genres);\n        setTrendingFilm(e);\n      });\n    } catch (e) {\n      setTrendingFilm(null);\n    } finally {\n      setIsLoading(true);\n    }\n  }, [movie_id]);\n\n  return (\n    <>\n      {isLoading ? (\n        <>\n          {trendingFilm.homepage ? (\n            <>\n              <Film trendingFilm={trendingFilm} genresFilm={genresFilm} />\n              <Info />\n            </>\n          ) : (\n            <NotFound />\n          )}\n        </>\n      ) : (\n        <Loading>Loading...</Loading>\n      )}\n    </>\n  );\n};\n\nexport default FilmDetailsPage;\n"],"names":["Button","styled","Container","BoxItem","Img","Box","Film","trendingFilm","genresFilm","title","release_date","overview","poster_path","vote_average","year","Date","getFullYear","backPage","useLocation","state","from","to","type","src","alt","toFixed","map","name","join","Conteiner","List","Item","LinkEl","NavLink","Info","movieId","useParams","useState","movie_id","setTrendingFilm","setGenresFilm","isLoading","setIsLoading","useEffect","fetchDetails","then","e","genres","homepage","NotFound"],"sourceRoot":""}